<?xml version="1.0" encoding="utf-8"?>
<scenario name="IntegerLiterals" type="token" description="2.4.2 Integer Literals">
  <invalid>
    <test>
      <code>&amp;O9</code>
      <result>
        <LexicalError startLine="1" startCol="1" endLine="1" endCol="3" errorNumber="9">error 9 (1,1) - (3,1): Invalid integer literal.</LexicalError>
        <IntegerLiteral startLine="1" startCol="3" endLine="1" endCol="4" base="Decimal">9</IntegerLiteral>
      </result>
    </test>
    <!-- Overflow -->
    <test>
      <code>9999999999999999999999999999999999999999999999999999999999999999999999</code>
      <result>
        <LexicalError startLine="1" startCol="1" endLine="1" endCol="71" errorNumber="9">error 9 (1,1) - (71,1): Invalid integer literal.</LexicalError>
      </result>
    </test>
    <test>
      <code>&amp;HFFFFFFFFFFFFFFFFFFFFFFFFFFFF</code>
      <result>
        <LexicalError startLine="1" startCol="1" endLine="1" endCol="31" errorNumber="9">error 9 (1,1) - (31,1): Invalid integer literal.</LexicalError>
      </result>
    </test>
    <test>
      <code>&amp;O7777777777777777777777777777</code>
      <result>
        <LexicalError startLine="1" startCol="1" endLine="1" endCol="31" errorNumber="9">error 9 (1,1) - (31,1): Invalid integer literal.</LexicalError>
      </result>
    </test>
    <test>
      <code>&amp;HZ</code>
      <result>
        <LexicalError startLine="1" startCol="1" endLine="1" endCol="3" errorNumber="9">error 9 (1,1) - (3,1): Invalid integer literal.</LexicalError>
        <Identifier startLine="1" startCol="3" endLine="1" endCol="4" escaped="False">Z</Identifier>
      </result>
    </test>
  </invalid>
  <valid>
    <test>
      <code>0123456789</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="11" base="Decimal">123456789</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>1S</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="3" base="Decimal" typeChar="S">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>1I</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="3" base="Decimal" typeChar="I">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>1L</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="3" base="Decimal" typeChar="L">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>1s</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="3" base="Decimal" typeChar="S">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>1i</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="3" base="Decimal" typeChar="I">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>1l</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="3" base="Decimal" typeChar="L">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>1%</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="3" base="Decimal" typeChar="%">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>1&amp;</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="3" base="Decimal" typeChar="&amp;">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>0123456789A</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="11" base="Decimal">123456789</IntegerLiteral>
        <Identifier startLine="1" startCol="11" endLine="1" endCol="12" escaped="False">A</Identifier>
      </result>
    </test>
    <test version="8.0">
      <code>10UL</code>
      <result>
        <UnsignedIntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" typeChar="UL">10</UnsignedIntegerLiteral>
      </result>
    </test>
    <test version="8.0">
      <code>10UI</code>
      <result>
        <UnsignedIntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" typeChar="UI">10</UnsignedIntegerLiteral>
      </result>
    </test>
    <test version="8.0">
      <code>10US</code>
      <result>
        <UnsignedIntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" typeChar="US">10</UnsignedIntegerLiteral>
      </result>
    </test>
    <!-- Hex literals -->
    <test>
      <code>&amp;H0123456789ABCDEF</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="19" base="Hexadecimal">81985529216486895</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;h0123456789abcdef</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="19" base="Hexadecimal">81985529216486895</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;H1S</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Hexadecimal" typeChar="S">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;H1I</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Hexadecimal" typeChar="I">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;H1L</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Hexadecimal" typeChar="L">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;H1s</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Hexadecimal" typeChar="S">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;H1i</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Hexadecimal" typeChar="I">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;H1l</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Hexadecimal" typeChar="L">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;H1%</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Hexadecimal" typeChar="%">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;H1&amp;</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Hexadecimal" typeChar="&amp;">1</IntegerLiteral>
      </result>
    </test>
    <!-- Octal literals -->
    <test>
      <code>&amp;O01234567</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="11" base="Octal">342391</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;o01234567</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="11" base="Octal">342391</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;O1S</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Octal" typeChar="S">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;O1I</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Octal" typeChar="I">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;O1L</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Octal" typeChar="L">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;O1s</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Octal" typeChar="S">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;O1i</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Octal" typeChar="I">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;O1l</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Octal" typeChar="L">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;O1%</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Octal" typeChar="%">1</IntegerLiteral>
      </result>
    </test>
    <test>
      <code>&amp;O1&amp;</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="5" base="Octal" typeChar="&amp;">1</IntegerLiteral>
      </result>
    </test>
    <!-- V7.1 vs V8.0 -->
    <test version="7.1">
      <code>10UL</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="3" base="Decimal">10</IntegerLiteral>
        <Identifier startLine="1" startCol="3" endLine="1" endCol="5" escaped="False">UL</Identifier>
      </result>
    </test>
    <test version="7.1">
      <code>10UI</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="3" base="Decimal">10</IntegerLiteral>
        <Identifier startLine="1" startCol="3" endLine="1" endCol="5" escaped="False">UI</Identifier>
      </result>
    </test>
    <test version="7.1">
      <code>10US</code>
      <result>
        <IntegerLiteral startLine="1" startCol="1" endLine="1" endCol="3" base="Decimal">10</IntegerLiteral>
        <Identifier startLine="1" startCol="3" endLine="1" endCol="5" escaped="False">US</Identifier>
      </result>
    </test>
  </valid>
</scenario>