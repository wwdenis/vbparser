<?xml version="1.0" encoding="utf-8"?>
<scenario name="CallOrIndex" type="expression" description="11.8 &amp; 11.9 Call and Index Expressions">
  <invalid>
    <test>
      <code>x(</code>
      <result>
        <CallOrIndexExpression startLine="1" startCol="1" endLine="1" endCol="3" isConstant="False">
          <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
            <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
          </SimpleNameExpression>
          <ArgumentCollection startLine="1" startCol="2" endLine="1" endCol="3">
            <Argument startLine="1" startCol="3" endLine="1" endCol="3">
              <SyntaxError isBad="True" startLine="1" startCol="3" endLine="1" endCol="3" />
            </Argument>
          </ArgumentCollection>
        </CallOrIndexExpression>
      </result>
      <errors>
        <ExpectedExpression startLine="1" startCol="3" endLine="1" endCol="3">error 27 (3,1) - (3,1): Expected expression.</ExpectedExpression>
      </errors>
    </test>
    <test>
      <code>x(a :=)</code>
      <result>
        <CallOrIndexExpression startLine="1" startCol="1" endLine="1" endCol="8" isConstant="False">
          <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
            <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
          </SimpleNameExpression>
          <ArgumentCollection startLine="1" startCol="2" endLine="1" endCol="8">
            <Argument startLine="1" startCol="3" endLine="1" endCol="7">
              <SimpleName startLine="1" startCol="3" endLine="1" endCol="4" escaped="False">a</SimpleName>
              <ColonEquals line="1" col="5" />
              <SyntaxError isBad="True" startLine="1" startCol="7" endLine="1" endCol="8" />
            </Argument>
            <RightParenthesis line="1" col="7" />
          </ArgumentCollection>
        </CallOrIndexExpression>
      </result>
      <errors>
        <ExpectedExpression startLine="1" startCol="7" endLine="1" endCol="8">error 27 (7,1) - (8,1): Expected expression.</ExpectedExpression>
      </errors>
    </test>
    <test>
      <code>x(a :=, b := 1)</code>
      <result>
        <CallOrIndexExpression startLine="1" startCol="1" endLine="1" endCol="16" isConstant="False">
          <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
            <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
          </SimpleNameExpression>
          <ArgumentCollection startLine="1" startCol="2" endLine="1" endCol="16">
            <Argument startLine="1" startCol="3" endLine="1" endCol="7">
              <SimpleName startLine="1" startCol="3" endLine="1" endCol="4" escaped="False">a</SimpleName>
              <ColonEquals line="1" col="5" />
              <SyntaxError isBad="True" startLine="1" startCol="7" endLine="1" endCol="8" />
            </Argument>
            <Comma line="1" col="7" />
            <Argument startLine="1" startCol="9" endLine="1" endCol="15">
              <SimpleName startLine="1" startCol="9" endLine="1" endCol="10" escaped="False">b</SimpleName>
              <ColonEquals line="1" col="11" />
              <IntegerLiteralExpression startLine="1" startCol="14" endLine="1" endCol="15" isConstant="True" base="Decimal">1</IntegerLiteralExpression>
            </Argument>
            <RightParenthesis line="1" col="15" />
          </ArgumentCollection>
        </CallOrIndexExpression>
      </result>
      <errors>
        <ExpectedExpression startLine="1" startCol="7" endLine="1" endCol="8">error 27 (7,1) - (8,1): Expected expression.</ExpectedExpression>
      </errors>
    </test>
    <test>
      <code>x(:= 1)</code>
      <result>
        <CallOrIndexExpression startLine="1" startCol="1" endLine="1" endCol="8" isConstant="False">
          <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
            <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
          </SimpleNameExpression>
          <ArgumentCollection startLine="1" startCol="2" endLine="1" endCol="8">
            <Argument startLine="1" startCol="3" endLine="1" endCol="7">
              <SyntaxError isBad="True" startLine="1" startCol="3" endLine="1" endCol="5" />
            </Argument>
            <RightParenthesis line="1" col="7" />
          </ArgumentCollection>
        </CallOrIndexExpression>
      </result>
      <errors>
        <ExpectedExpression startLine="1" startCol="3" endLine="1" endCol="5">error 27 (3,1) - (5,1): Expected expression.</ExpectedExpression>
      </errors>
    </test>
    <test>
      <code>x(a := 1, b)</code>
      <result>
        <CallOrIndexExpression startLine="1" startCol="1" endLine="1" endCol="13" isConstant="False">
          <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
            <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
          </SimpleNameExpression>
          <ArgumentCollection startLine="1" startCol="2" endLine="1" endCol="13">
            <Argument startLine="1" startCol="3" endLine="1" endCol="9">
              <SimpleName startLine="1" startCol="3" endLine="1" endCol="4" escaped="False">a</SimpleName>
              <ColonEquals line="1" col="5" />
              <IntegerLiteralExpression startLine="1" startCol="8" endLine="1" endCol="9" isConstant="True" base="Decimal">1</IntegerLiteralExpression>
            </Argument>
            <Comma line="1" col="9" />
            <Argument startLine="1" startCol="11" endLine="1" endCol="12">
              <SimpleNameExpression startLine="1" startCol="11" endLine="1" endCol="12" isConstant="False">
                <SimpleName startLine="1" startCol="11" endLine="1" endCol="12" escaped="False">b</SimpleName>
              </SimpleNameExpression>
            </Argument>
            <RightParenthesis line="1" col="12" />
          </ArgumentCollection>
        </CallOrIndexExpression>
      </result>
      <errors>
        <ExpectedNamedArgument startLine="1" startCol="11" endLine="1" endCol="12">error 29 (11,1) - (12,1): Expected named argument.</ExpectedNamedArgument>
      </errors>
    </test>
    <test>
      <code>x(a := 1, , b := 2)</code>
      <result>
        <CallOrIndexExpression startLine="1" startCol="1" endLine="1" endCol="20" isConstant="False">
          <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
            <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
          </SimpleNameExpression>
          <ArgumentCollection startLine="1" startCol="2" endLine="1" endCol="20">
            <Argument startLine="1" startCol="3" endLine="1" endCol="9">
              <SimpleName startLine="1" startCol="3" endLine="1" endCol="4" escaped="False">a</SimpleName>
              <ColonEquals line="1" col="5" />
              <IntegerLiteralExpression startLine="1" startCol="8" endLine="1" endCol="9" isConstant="True" base="Decimal">1</IntegerLiteralExpression>
            </Argument>
            <Comma line="1" col="9" />
            <Comma line="1" col="11" />
            <Argument startLine="1" startCol="13" endLine="1" endCol="19">
              <SimpleName startLine="1" startCol="13" endLine="1" endCol="14" escaped="False">b</SimpleName>
              <ColonEquals line="1" col="15" />
              <IntegerLiteralExpression startLine="1" startCol="18" endLine="1" endCol="19" isConstant="True" base="Decimal">2</IntegerLiteralExpression>
            </Argument>
            <RightParenthesis line="1" col="19" />
          </ArgumentCollection>
        </CallOrIndexExpression>
      </result>
      <errors>
        <ExpectedNamedArgument startLine="1" startCol="11" endLine="1" endCol="12">error 29 (11,1) - (12,1): Expected named argument.</ExpectedNamedArgument>
      </errors>
    </test>
  </invalid>
  <valid>
    <test>
      <code>x</code>
      <result>
        <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
          <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
        </SimpleNameExpression>
      </result>
    </test>
    <test>
      <code>x()</code>
      <result>
        <CallOrIndexExpression startLine="1" startCol="1" endLine="1" endCol="4" isConstant="False">
          <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
            <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
          </SimpleNameExpression>
          <ArgumentCollection startLine="1" startCol="2" endLine="1" endCol="4">
            <RightParenthesis line="1" col="3" />
          </ArgumentCollection>
        </CallOrIndexExpression>
      </result>
    </test>
    <test>
      <code>x(a, b, c)</code>
      <result>
        <CallOrIndexExpression startLine="1" startCol="1" endLine="1" endCol="11" isConstant="False">
          <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
            <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
          </SimpleNameExpression>
          <ArgumentCollection startLine="1" startCol="2" endLine="1" endCol="11">
            <Argument startLine="1" startCol="3" endLine="1" endCol="4">
              <SimpleNameExpression startLine="1" startCol="3" endLine="1" endCol="4" isConstant="False">
                <SimpleName startLine="1" startCol="3" endLine="1" endCol="4" escaped="False">a</SimpleName>
              </SimpleNameExpression>
            </Argument>
            <Comma line="1" col="4" />
            <Argument startLine="1" startCol="6" endLine="1" endCol="7">
              <SimpleNameExpression startLine="1" startCol="6" endLine="1" endCol="7" isConstant="False">
                <SimpleName startLine="1" startCol="6" endLine="1" endCol="7" escaped="False">b</SimpleName>
              </SimpleNameExpression>
            </Argument>
            <Comma line="1" col="7" />
            <Argument startLine="1" startCol="9" endLine="1" endCol="10">
              <SimpleNameExpression startLine="1" startCol="9" endLine="1" endCol="10" isConstant="False">
                <SimpleName startLine="1" startCol="9" endLine="1" endCol="10" escaped="False">c</SimpleName>
              </SimpleNameExpression>
            </Argument>
            <RightParenthesis line="1" col="10" />
          </ArgumentCollection>
        </CallOrIndexExpression>
      </result>
    </test>
    <test>
      <code>x(1 + 2, 3 * 4, 5 / 6)</code>
      <result>
        <CallOrIndexExpression startLine="1" startCol="1" endLine="1" endCol="23" isConstant="False">
          <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
            <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
          </SimpleNameExpression>
          <ArgumentCollection startLine="1" startCol="2" endLine="1" endCol="23">
            <Argument startLine="1" startCol="3" endLine="1" endCol="8">
              <BinaryOperatorExpression startLine="1" startCol="3" endLine="1" endCol="8" isConstant="True" operator="Plus">
                <IntegerLiteralExpression startLine="1" startCol="3" endLine="1" endCol="4" isConstant="True" base="Decimal">1</IntegerLiteralExpression>
                <Plus line="1" col="5" />
                <IntegerLiteralExpression startLine="1" startCol="7" endLine="1" endCol="8" isConstant="True" base="Decimal">2</IntegerLiteralExpression>
              </BinaryOperatorExpression>
            </Argument>
            <Comma line="1" col="8" />
            <Argument startLine="1" startCol="10" endLine="1" endCol="15">
              <BinaryOperatorExpression startLine="1" startCol="10" endLine="1" endCol="15" isConstant="True" operator="Multiply">
                <IntegerLiteralExpression startLine="1" startCol="10" endLine="1" endCol="11" isConstant="True" base="Decimal">3</IntegerLiteralExpression>
                <Star line="1" col="12" />
                <IntegerLiteralExpression startLine="1" startCol="14" endLine="1" endCol="15" isConstant="True" base="Decimal">4</IntegerLiteralExpression>
              </BinaryOperatorExpression>
            </Argument>
            <Comma line="1" col="15" />
            <Argument startLine="1" startCol="17" endLine="1" endCol="22">
              <BinaryOperatorExpression startLine="1" startCol="17" endLine="1" endCol="22" isConstant="True" operator="Divide">
                <IntegerLiteralExpression startLine="1" startCol="17" endLine="1" endCol="18" isConstant="True" base="Decimal">5</IntegerLiteralExpression>
                <ForwardSlash line="1" col="19" />
                <IntegerLiteralExpression startLine="1" startCol="21" endLine="1" endCol="22" isConstant="True" base="Decimal">6</IntegerLiteralExpression>
              </BinaryOperatorExpression>
            </Argument>
            <RightParenthesis line="1" col="22" />
          </ArgumentCollection>
        </CallOrIndexExpression>
      </result>
    </test>
    <test>
      <code>x(a, b := 2, c := 3 + 4)</code>
      <result>
        <CallOrIndexExpression startLine="1" startCol="1" endLine="1" endCol="25" isConstant="False">
          <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
            <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
          </SimpleNameExpression>
          <ArgumentCollection startLine="1" startCol="2" endLine="1" endCol="25">
            <Argument startLine="1" startCol="3" endLine="1" endCol="4">
              <SimpleNameExpression startLine="1" startCol="3" endLine="1" endCol="4" isConstant="False">
                <SimpleName startLine="1" startCol="3" endLine="1" endCol="4" escaped="False">a</SimpleName>
              </SimpleNameExpression>
            </Argument>
            <Comma line="1" col="4" />
            <Argument startLine="1" startCol="6" endLine="1" endCol="12">
              <SimpleName startLine="1" startCol="6" endLine="1" endCol="7" escaped="False">b</SimpleName>
              <ColonEquals line="1" col="8" />
              <IntegerLiteralExpression startLine="1" startCol="11" endLine="1" endCol="12" isConstant="True" base="Decimal">2</IntegerLiteralExpression>
            </Argument>
            <Comma line="1" col="12" />
            <Argument startLine="1" startCol="14" endLine="1" endCol="24">
              <SimpleName startLine="1" startCol="14" endLine="1" endCol="15" escaped="False">c</SimpleName>
              <ColonEquals line="1" col="16" />
              <BinaryOperatorExpression startLine="1" startCol="19" endLine="1" endCol="24" isConstant="True" operator="Plus">
                <IntegerLiteralExpression startLine="1" startCol="19" endLine="1" endCol="20" isConstant="True" base="Decimal">3</IntegerLiteralExpression>
                <Plus line="1" col="21" />
                <IntegerLiteralExpression startLine="1" startCol="23" endLine="1" endCol="24" isConstant="True" base="Decimal">4</IntegerLiteralExpression>
              </BinaryOperatorExpression>
            </Argument>
            <RightParenthesis line="1" col="24" />
          </ArgumentCollection>
        </CallOrIndexExpression>
      </result>
    </test>
    <test>
      <code>x(Option := 5)</code>
      <result>
        <CallOrIndexExpression startLine="1" startCol="1" endLine="1" endCol="15" isConstant="False">
          <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
            <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
          </SimpleNameExpression>
          <ArgumentCollection startLine="1" startCol="2" endLine="1" endCol="15">
            <Argument startLine="1" startCol="3" endLine="1" endCol="14">
              <SimpleName startLine="1" startCol="3" endLine="1" endCol="9" escaped="False">Option</SimpleName>
              <ColonEquals line="1" col="10" />
              <IntegerLiteralExpression startLine="1" startCol="13" endLine="1" endCol="14" isConstant="True" base="Decimal">5</IntegerLiteralExpression>
            </Argument>
            <RightParenthesis line="1" col="14" />
          </ArgumentCollection>
        </CallOrIndexExpression>
      </result>
    </test>
    <test>
      <code>x(, a)</code>
      <result>
        <CallOrIndexExpression startLine="1" startCol="1" endLine="1" endCol="7" isConstant="False">
          <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
            <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
          </SimpleNameExpression>
          <ArgumentCollection startLine="1" startCol="2" endLine="1" endCol="7">
            <Comma line="1" col="3" />
            <Argument startLine="1" startCol="5" endLine="1" endCol="6">
              <SimpleNameExpression startLine="1" startCol="5" endLine="1" endCol="6" isConstant="False">
                <SimpleName startLine="1" startCol="5" endLine="1" endCol="6" escaped="False">a</SimpleName>
              </SimpleNameExpression>
            </Argument>
            <RightParenthesis line="1" col="6" />
          </ArgumentCollection>
        </CallOrIndexExpression>
      </result>
    </test>
    <test>
      <code>x(,, a)</code>
      <result>
        <CallOrIndexExpression startLine="1" startCol="1" endLine="1" endCol="8" isConstant="False">
          <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
            <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
          </SimpleNameExpression>
          <ArgumentCollection startLine="1" startCol="2" endLine="1" endCol="8">
            <Comma line="1" col="3" />
            <Comma line="1" col="4" />
            <Argument startLine="1" startCol="6" endLine="1" endCol="7">
              <SimpleNameExpression startLine="1" startCol="6" endLine="1" endCol="7" isConstant="False">
                <SimpleName startLine="1" startCol="6" endLine="1" endCol="7" escaped="False">a</SimpleName>
              </SimpleNameExpression>
            </Argument>
            <RightParenthesis line="1" col="7" />
          </ArgumentCollection>
        </CallOrIndexExpression>
      </result>
    </test>
    <test>
      <code>x(a, ,b)</code>
      <result>
        <CallOrIndexExpression startLine="1" startCol="1" endLine="1" endCol="9" isConstant="False">
          <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
            <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
          </SimpleNameExpression>
          <ArgumentCollection startLine="1" startCol="2" endLine="1" endCol="9">
            <Argument startLine="1" startCol="3" endLine="1" endCol="4">
              <SimpleNameExpression startLine="1" startCol="3" endLine="1" endCol="4" isConstant="False">
                <SimpleName startLine="1" startCol="3" endLine="1" endCol="4" escaped="False">a</SimpleName>
              </SimpleNameExpression>
            </Argument>
            <Comma line="1" col="4" />
            <Comma line="1" col="6" />
            <Argument startLine="1" startCol="7" endLine="1" endCol="8">
              <SimpleNameExpression startLine="1" startCol="7" endLine="1" endCol="8" isConstant="False">
                <SimpleName startLine="1" startCol="7" endLine="1" endCol="8" escaped="False">b</SimpleName>
              </SimpleNameExpression>
            </Argument>
            <RightParenthesis line="1" col="8" />
          </ArgumentCollection>
        </CallOrIndexExpression>
      </result>
    </test>
    <test>
      <code>x(,,,,)</code>
      <result>
        <CallOrIndexExpression startLine="1" startCol="1" endLine="1" endCol="8" isConstant="False">
          <SimpleNameExpression startLine="1" startCol="1" endLine="1" endCol="2" isConstant="False">
            <SimpleName startLine="1" startCol="1" endLine="1" endCol="2" escaped="False">x</SimpleName>
          </SimpleNameExpression>
          <ArgumentCollection startLine="1" startCol="2" endLine="1" endCol="8">
            <Comma line="1" col="3" />
            <Comma line="1" col="4" />
            <Comma line="1" col="5" />
            <Comma line="1" col="6" />
            <RightParenthesis line="1" col="7" />
          </ArgumentCollection>
        </CallOrIndexExpression>
      </result>
    </test>
  </valid>
</scenario>